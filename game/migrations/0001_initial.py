# Generated by Django 5.0.7 on 2024-08-04 18:17

import ckeditor.fields
import django.db.models.deletion
import django_jalali.db.models
import game.models
import jdatetime
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('adminstrator', '0001_initial'),
        ('brand', '0001_initial'),
        ('player', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='game_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('fa_name', models.CharField(max_length=100)),
                ('en_name', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('fa_name', models.CharField(max_length=100)),
                ('en_name', models.CharField(blank=True, max_length=100, null=True)),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('gameID', models.IntegerField(blank=True, null=True, unique=True)),
                ('fa_name', models.CharField(max_length=100)),
                ('en_name', models.CharField(max_length=100)),
                ('scenario', ckeditor.fields.RichTextField(verbose_name='Game scenario')),
                ('roles', ckeditor.fields.RichTextField(verbose_name='Game roles')),
                ('descriptions', ckeditor.fields.RichTextField(verbose_name='Game descriptions')),
                ('unique_description', ckeditor.fields.RichTextField(verbose_name='Game unique description')),
                ('teaser', models.FileField(blank=True, null=True, upload_to=game.models.game_teaser_path)),
                ('poster', models.ImageField(upload_to=game.models.game_poster_path)),
                ('price', models.IntegerField()),
                ('url', models.CharField(max_length=150)),
                ('active', models.BooleanField(default=False)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminstrator.admin_info')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brand.brand')),
                ('game_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game_type')),
            ],
        ),
        migrations.CreateModel(
            name='game_comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('created_at', django_jalali.db.models.jDateField(default=jdatetime.date.today)),
                ('comment', models.TextField()),
                ('like', models.IntegerField()),
                ('active', models.BooleanField(default=False)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('player_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.player_info')),
            ],
        ),
        migrations.CreateModel(
            name='game_details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('age', models.IntegerField()),
                ('hardship', models.IntegerField()),
                ('player_from', models.IntegerField()),
                ('player_to', models.IntegerField()),
                ('time', models.IntegerField(default=0)),
                ('short_address', models.CharField(max_length=50)),
                ('full_address', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='game_reply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('reply', models.TextField()),
                ('active', models.BooleanField(default=True)),
                ('admin_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminstrator.admin_info')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('game_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game_comment')),
            ],
        ),
        migrations.CreateModel(
            name='game_time',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('time_from', models.CharField(max_length=4)),
                ('time_to', models.CharField(max_length=4)),
                ('active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
            ],
        ),
        migrations.CreateModel(
            name='game_closed_session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('day', django_jalali.db.models.jDateField(default=jdatetime.date.today)),
                ('active', models.BooleanField(default=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='adminstrator.admin_info')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='player.player_info')),
                ('game_time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game_time')),
            ],
        ),
        migrations.CreateModel(
            name='game_genres',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.genre')),
            ],
        ),
        migrations.CreateModel(
            name='two_days_later',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(default=uuid.uuid4)),
                ('enable_date', django_jalali.db.models.jDateField(default=jdatetime.date.today)),
                ('active', models.BooleanField(default=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game')),
                ('game_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.game_details')),
            ],
        ),
    ]
